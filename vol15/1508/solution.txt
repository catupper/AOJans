問題番号:AOJ1508
問題名:RMQ

解説:
RMQなのだが、シフトするクエリがあるのでセグツリーや平方分割では解くのは難しい。なので平衡二分探索木を実装するのがよい。
平衡二分探索木は
insert 追加
remove 削除
merge  2つの木をくっつける
split  2つの木に分ける
ことができて、常にだいたい平衡に保たれる木である。
また、各ノードにセグツリーのように子の総和や最大値を持っておくことで、柔軟なセグツリーのようなものが出来上がります。これを実装しましょう。
今回はtreapというタイプの平衡二分木を実装しています。
これは各ノードが値以外に優先度というものを持っており、木が、優先度についてはヒープ、値については二分探索木を構成するように保つ構造です。平衡に保たれる性質を持っています。
insertとremoveができればmergeとsplitが簡単に実装できます。
逆にmergeとsplitができればinsertとremoveも簡単に出来ます。
ここのコードではmergeとsplitを実装してやっています。
この問題はinsertとremoveだけで解けるのですが、insertとremoveだと木の回転を実装するなどの理由で若干実装が重くなるのでmerge,splitで組みました。

アルゴリズム:
平衡二分探索木

オーダー:
O(QlogN)
N = 要素数
Q = クエリ数



